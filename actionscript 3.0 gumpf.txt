DEBUGGING IN FLEX
-----------------

to profile memory usage..
Profile > Profile External Application

standalone..
java -jar /Applications/Adobe\ Flash\ CS4/Common/Configuration/ActionScript\ 3.0/fdb.jar
(fdb) run /Users/shooley/Sites/flash/HeadlessPlayer/lib/HeadlessPlayer.swf

in browser..
java -jar /Applications/Adobe\ Flash\ CS4/Common/Configuration/ActionScript\ 3.0/fdb.jar
(fdb) run

step
next
continue

break [args]
clear [args]

info breakpoints

print [variable_name | object_name[.] | property]

bt

kill


# To debbug in Flex, create a real flex app
but change the debug path to about:blank (see here http://www.jeffryhouser.com/index.cfm/2007/12/4/Connecting-Flex-3-to-a-running-Debugger-session)
start debugging - it will wait to attach to your swf

UIComponent
-----------

The graphic at index 1 is removed automatically.


//
//var textVariable:String = "some default value";
//var numericVariable:Number = 17;
//var dateVariable:Date;
// x:Number
// var birthday:Date = new Date();
// var student:Student = new Student();

    // do stuff to set initial values for properties
    // and otherwise set up the object
//    textVariable = "Hello there!";
 //   dateVariable = new Date(2001, 5, 11);

 // adgDoc.doSomething();

//	var animalCount:int = adGContentXML.animal.length();
//	var firstAnimal:String = adGContentXML.animal[0].type;
//  xDoc.parseXML(adGContentXML.toXMLString());
//  trace(xDoc.firstChild.childNodes[0]);


All drawing in graphics is done behind containg children on the stage.
You can draw inside a shape, Sprite or Movieclip in that order of complexity

//			var bg:Shape = new Shape();
//			var g:Graphics = bg.graphics;
//			g.beginFill(0,1);
//			g.drawRect(0,0,1000,1000);
//			g.endFill();
//			background = bg as DisplayObject;
//			addChildAt(background,0);

//what the fuck is this shit?			addChild(_progress_small);

Flash Player 10.1 introduced new drawing api! More object orientated, drawPath
You can store an entire drawing in an object

STYLES
-------
Here's a list of the methods you can use to set, get, or clear styles:

INSTANCE
instance.setStyle(styleName, styleValue)
instance.clearStyle(styleName)
instance.getStyle(styleName)

COMPONENT
StyleManager.setComponentStyle(componentClass, styleName, styleValue)
StyleManager.clearComponentStyle(componentClass, styleName)
StyleManager.getComponentStyle(componentClass, styleName)

GLOBAL
StyleManager.setStyle(styleName, styleValue)
StyleManager.clearStyle(styleName)
StyleManager.getStyle(styleName)


-- Why is width or height different in UIComponent? --
------------------------------------------------------

1) Origin is top left
2) XScale is todo with startWidth and current width
3) inside draw() you should deal with each invalidated property

in a sprite the width is the reported width?
in a uicomponent it has a variable called width

you can get the stage width as you set it in flash from the loader info

obviously inside a component if you , say, wanted to draw around it, you would drawrect 0,0,width,height


XML
---

EX4 to parse xml in flash




	// woo woo! new (to me) keyword. 'dynamic', ie - dynamically add properties at runtime

	/*
	 * // add an undeclared property
	 * dyna.extraProperty = "Dynamically added property";
	 *
	 * // add an undeclared function
	 * dyna.extraFunction = function() {
	 *    trace( dyna.extraProperty );
	 * }
	*/
