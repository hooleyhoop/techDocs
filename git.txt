** UPDATED **

// create a new local branch based on a remote branch
git checkout --track -b refactored origin/refactored

// list remote tracking branches
git branch -r

// update remote tracking branches
git fetch origin

// see what changed
git diff master origin/master
> q

// merge
git merge origin/master

// push back
git push origin experimental


# STASH #

// push on to stash stack
git stash save

git stash list
> stash@{0}: WIP on hooview: 8f5c203 better colours in sidebar
> stash@{1}: WIP on master: 707496e Merge remote branch 'origin/master'

// apply
git stash apply stash@{0}

// clean stash stack
git stash drop stash@{0}
git stash pop
git stash clear

git cherry-pick SHA1 --no-commit

gitosis manages the repositories

git@git.audioboo.fm:gitosis-admin.git
audioboo-payments

// save uncommited changes to a new branch
git checkout -b new_branch_name
git push origin new_branch_name


-- copy changes from a different branch for a single file
git checkout otherbranch myfile.txt

** OLD **


// check out a file
git log doMenuItem.scpt
> b2b363f13eecf1be5c6e0d721a492341c5b999f2
git checkout b2b363f13eecf1be5c6e0d721a492341c5b999f2 /Users/shooley/Desktop/Programming/Cocoa/Blake/SHShared/Applescripts/doMenuItem.scpt

// find a couple of lines
git grep NSPointerArray $(git log -g --pretty=format:%h)
git grep hiragino $(git log -g --pretty=format:%h)

2d0bcde:path/to/project/file.c: result = halfRemeberedNameOfFunction( data );
65fc672:path/to/project/file.c: result = halfRemeberedNameOfFunction( data );
24f2858:path/to/project/file.c: result = halfRemeberedNameOfFunction( data );
252e3a5:path/to/project/file.c: result = halfRemeberedNameOfFunction( data, args );
b58bc0b:path/to/project/file.c: result = _halfRemeberedNameOfFunction( data, options );
dce8d9d:path/to/project/file.c: result = halfRemeberedNameOfFunction( data, moreData );

git show 252e3a5:SHShared/Tests/SetUpAndTearDownTests.m:


git diff | gitx


//ok so we fetch..
git merge origin/master
git mergetool 			// fix conflicts
$ git status | grep unmerged
After resolving conflicts and staging the result, git ls-files -u
git commit -m "sorting out conflicts"


// show configuration
prompt> git config --global --list

// clone, new project, etc.
git gui

prompt> git help <command>

git add index.html
git status
git commit -m "first paragraph" -m "second paragraph" -m "etc"
git log -1

// commit all changes
git commit -a

// change branch
git checkout RB_1.0

git tag 1.0 branchname

// show all tags
git tag

//rebase RB_1.0 onto current branch
git rebase RB_1.0

// delete branch
 git branch -d RB_1.0

$ git whatchanged -p /Users/shooley/Desktop/Programming/Cocoa/Blake/SHShared/Src/HooSenTestProbe.m



NEW LOCAL REPOSITORY
--------------------
#On local machine
cd foo_project
git init
git add *
git commit -m "My initial commit message"
