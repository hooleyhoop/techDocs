RAILS 
-----
http://articles.sitepoint.com/article/learn-ruby-on-rails
http://articles.sitepoint.com/article/rails-for-beginners/3

// crete a project
$ sudo rails demo
$ cd demo
$ sudo rake db:migrate    	-- create empty database
$ sudo script/generate rspec	-- create files needed for testing
$ ruby script/server
$ ruby script/console

http://localhost:3000

Model (ActiveRecord )
View ( ActionView )
Controller ( ActionController )

 The controllers subdirectory is where Rails looks to find controller classes. A controller handles a web request from the user.

 The views subdirectory holds the display templates to fill in with data from our application, convert to HTML, and return to the user's browser.

 The models subdirectory holds the classes that model and wrap the data stored in our application's database. In most frameworks, this part of the application can grow pretty messy, tedious, verbose, and error-prone. Rails makes it dead simple.

 The helpers subdirectory holds any helper classes used to assist the model, view, and controller classes. This helps to keep the model, view, and controller code small, focused, and uncluttered.

Need 3 databases
----------------
 library_development
 library_production
 library_test

database.yml

$ rake -T db  -- see all available Rake Tasks

'Story' objects are in 'stories' table
'Story.title' is a column in that table

// open a rails console so we can control and inspect our App
$ cd demo
$ ruby script/console

/* Static Pages */
-----------------------------------
http://localhost:3000/index.html

is in 
/public/index.html

put your own static pages in public

/* Dynamic Pages */
-----------------------------------

Rails actions, which are a more powerful way to define URLs than static files. 
Rails actions come bundled together inside controllers.

by default..
http://localhost:3000/controller/action

so
$ sudo script/generate controller Pages home contact	-- Pages controller, home & contact are optional actions

http://localhost:3000/pages/home
http://localhost:3000/pages/contact

